'''
문제 설명
괄호가 바르게 짝지어졌다는 것은 '(' 문자로 열렸으면 반드시 짝지어서 ')' 문자로 닫혀야 한다는 뜻입니다. 예를 들어

"()()" 또는 "(())()" 는 올바른 괄호입니다.
")()(" 또는 "(()(" 는 올바르지 않은 괄호입니다.
'(' 또는 ')' 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요.

제한사항
문자열 s의 길이 : 100,000 이하의 자연수
문자열 s는 '(' 또는 ')' 로만 이루어져 있습니다.

입출력 예
s	answer
"()()"	-> true
"(())()" ->	true
")()(" ->	false
"(()(" ->	false

'''
# 내가 푼 풀이(오답)
def solution(s):
    li = list(s)
    l1 = li.count('(')
    l2 = li.count(')')
    if (li[0] == '(') and (li[-1] == ')'):
        if l1 == l2:
            return True
        else:
            return False
    else:
        return False
'''
오답인 이유
(반례)
'())(()' 처럼 완전히 닫히지 않은 괄호들을 포착하지 못함(5, 11번 케이스 오답)
그러므로 이를 해결하기 위해서 각 괄호가 완전히 닫혔는지를 확인하면서 진행해야함.
'''
# 정답
def solution(s):
  # rest 변수를 0으로 초기화합니다. 이 변수는 여는 괄호와 닫는 괄호의 차이를 추적합니다.
    rest = 0
    # 문자열 s의 각 문자에 대해 순회
    for i in s:
    # 만약 문자가 여는 괄호 '('라면, rest를 1 증가
        if i == "(":
            rest += 1
    # 만약 문자가 닫는 괄호 ')'라면, rest를 1 감소
        elif i == ")":
            rest -= 1        
    # 만약 rest가 음수가 되면, 즉 닫는 괄호 ')'가 여는 괄호 '('보다 많이 나오면,
    # 올바르지 않은 괄호 문자열이므로 False를 반환
        if rest < 0:
            return False
    # 모든 문자를 확인한 후에 rest가 0이 아니라면, 즉 여는 괄호 '('와 닫는 괄호 ')'의 개수가 맞지 않으면,
    # 올바르지 않은 괄호 문자열이므로 False를 반환
    if rest != 0:
        return False
    # 위의 모든 조건을 통과하면, 주어진 문자열은 올바른 괄호 문자열이므로 True를 반환
    return True

